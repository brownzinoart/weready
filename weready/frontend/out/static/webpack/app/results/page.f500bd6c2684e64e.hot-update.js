"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/results/page",{

/***/ "(app-pages-browser)/./app/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./app/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useAuth,AuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useAuth() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [userProfile, setUserProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const isAuthenticated = !!user;\n    // Load user from token on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadUser = async ()=>{\n            const token = localStorage.getItem(\"access_token\");\n            if (token) {\n                try {\n                    const response = await fetch(\"http://localhost:8000/api/auth/me\", {\n                        headers: {\n                            \"Authorization\": \"Bearer \".concat(token)\n                        }\n                    });\n                    if (response.ok) {\n                        const userData = await response.json();\n                        setUser(userData);\n                    } else {\n                        // Token might be expired, try to refresh\n                        const refreshed = await refreshToken();\n                        if (!refreshed) {\n                            localStorage.removeItem(\"access_token\");\n                            localStorage.removeItem(\"refresh_token\");\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Failed to load user:\", error);\n                    localStorage.removeItem(\"access_token\");\n                    localStorage.removeItem(\"refresh_token\");\n                }\n            }\n            setIsLoading(false);\n        };\n        loadUser();\n    }, []);\n    const login = (provider, analysisId)=>{\n        const baseUrl = \"http://localhost:8000/api/auth/\".concat(provider);\n        const url = analysisId ? \"\".concat(baseUrl, \"?analysis_id=\").concat(analysisId) : baseUrl;\n        window.location.href = url;\n    };\n    const logout = ()=>{\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        setUser(null);\n        // Call logout endpoint\n        fetch(\"http://localhost:8000/api/auth/logout\", {\n            method: \"POST\"\n        }).catch(console.error);\n    };\n    const refreshToken = async ()=>{\n        const refreshTokenValue = localStorage.getItem(\"refresh_token\");\n        if (!refreshTokenValue) return false;\n        try {\n            const response = await fetch(\"http://localhost:8000/api/auth/refresh\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    refresh_token: refreshTokenValue\n                })\n            });\n            if (response.ok) {\n                const data = await response.json();\n                localStorage.setItem(\"access_token\", data.access_token);\n                // Reload user data\n                const userResponse = await fetch(\"http://localhost:8000/api/auth/me\", {\n                    headers: {\n                        \"Authorization\": \"Bearer \".concat(data.access_token)\n                    }\n                });\n                if (userResponse.ok) {\n                    const userData = await userResponse.json();\n                    setUser(userData);\n                    return true;\n                }\n            }\n            return false;\n        } catch (error) {\n            console.error(\"Token refresh failed:\", error);\n            return false;\n        }\n    };\n    // User classification and profile management\n    const classifyUser = async (userData)=>{\n        // Check if user has analyses (would need backend endpoint)\n        try {\n            const token = localStorage.getItem(\"access_token\");\n            const response = await fetch(\"http://localhost:8000/api/user/analyses/summary\", {\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(token)\n                }\n            });\n            let analysisCount = 0;\n            let lastAnalysisDate = undefined;\n            let hasAnalyses = false;\n            if (response.ok) {\n                const data = await response.json();\n                analysisCount = data.total_analyses || 0;\n                lastAnalysisDate = data.last_analysis_date;\n                hasAnalyses = analysisCount > 0;\n            }\n            // Determine user type based on account age and analysis history\n            const accountAge = new Date().getTime() - new Date(userData.created_at).getTime();\n            const isNewAccount = accountAge < 7 * 24 * 60 * 60 * 1000; // 7 days\n            const userType = isNewAccount || analysisCount === 0 ? \"new\" : \"returning\";\n            // Determine preferred view based on role\n            let preferredView = \"auto\";\n            if (userData.role === \"developer\") preferredView = \"technical\";\n            if (userData.role === \"investor\") preferredView = \"business\";\n            // Check onboarding completion from localStorage\n            const onboardingCompleted = localStorage.getItem(\"onboarding_completed_\".concat(userData.id)) === \"true\";\n            return {\n                userType,\n                hasAnalyses,\n                analysisCount,\n                onboardingCompleted,\n                lastAnalysisDate,\n                preferredView\n            };\n        } catch (error) {\n            console.error(\"Failed to classify user:\", error);\n            return {\n                userType: \"new\",\n                hasAnalyses: false,\n                analysisCount: 0,\n                onboardingCompleted: false,\n                preferredView: \"auto\"\n            };\n        }\n    };\n    const updateUserProfile = (updates)=>{\n        if (userProfile) {\n            const newProfile = {\n                ...userProfile,\n                ...updates\n            };\n            setUserProfile(newProfile);\n            // Persist onboarding completion\n            if (updates.onboardingCompleted && user) {\n                localStorage.setItem(\"onboarding_completed_\".concat(user.id), \"true\");\n            }\n        }\n    };\n    const getViewMode = ()=>{\n        if (!userProfile || userProfile.preferredView === \"auto\") {\n            // Auto-detect based on user role\n            if ((user === null || user === void 0 ? void 0 : user.role) === \"investor\") return \"business\";\n            if ((user === null || user === void 0 ? void 0 : user.role) === \"developer\") return \"technical\";\n            // Default to business for founders (more accessible)\n            return \"business\";\n        }\n        return userProfile.preferredView === \"business\" ? \"business\" : \"technical\";\n    };\n    // Load user profile when user changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (user && !userProfile) {\n            classifyUser(user).then(setUserProfile);\n        }\n    }, [\n        user,\n        userProfile\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            userProfile,\n            isAuthenticated,\n            isLoading,\n            login,\n            logout,\n            refreshToken,\n            updateUserProfile,\n            getViewMode\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/wallymo/weready/weready/frontend/app/contexts/AuthContext.tsx\",\n        lineNumber: 240,\n        columnNumber: 5\n    }, this);\n}\n_s1(AuthProvider, \"2MhXZoZvL+LvDIfBS+rFRoBsSDA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/contexts/AuthContext.tsx\n"));

/***/ })

});